There is an aqpplication which is used ot create random data.  To create this data it needs to be supplied with record configuration in YAML format. This configuration must adhere to openapi schema definition given below:
{
    "id": "/RefRecord",
    "type": "object",
    "additionalProperties": false,
    "patternProperties": {
        "^[a-zA-Z]*$": {
            "type": "object",
            "required": ["schema"],
            "additionalProperties": false,
            "properties": {
                "count": { "type": "integer" },
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": ["name", "namespace", "function"],
                        "additionalProperties": false,
                        "properties": {
                            "name": { "type": "string" },
                            "namespace": { "type": "string" },
                            "function": { "type": "string" },
                            "unique": { "type": "boolean" },
                            "args": {
                                "type": "array",
                                "items": { 
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            },
                        }
                    }
                }
            }
        }
    }
}

In above definition, below is the meaning of fields:
count: Number of records to generate, this is optional and can be left blank in which case this record is generated on-demand or dynamically
name: filed name within the record
function: function from fakerjs library which can be used to create this field
namespace: namespace to which the function belongs. Ex. for city this will be location
unique: If this property is set for a column, valid only when count is specified, all values for the column within the collection will be unique 
args: Arguments required by function.

Based on above schema, below is valid configuration for customer, which has these fields - customer_id, name, phone, email, and city. Since count is not specified data is generated dynamically one at a time when requested
customer:
  schema:
    - name: customer_id
      namespace: number
      function: int
      unique: true
      args:
        - min: 1
        - max: 100
    - name: name
      namespace: faker
      function: name
    - name: phone
      namespace: phone
      function: phoneNumber
    - name: email
      namespace: internet
      function: email
    - name: city
      namespace: address
      function: city

Now based on the above information create configuration for apache log
Now based on above information create configuration for iot_sensors - device_id, factory_id - which ranges from 1 to 10, section which has value one of [A B C D], sensor_type which is one of [ temperature humidiuty proximity smoke level ]. Application should create records dynamically and city should be unique.